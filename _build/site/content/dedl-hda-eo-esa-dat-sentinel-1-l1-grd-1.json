{"version":2,"kind":"Notebook","sha256":"2fe0ede76506777a3d72a36d3da18f006879927af94709951cd2a2990d67dc49","slug":"dedl-hda-eo-esa-dat-sentinel-1-l1-grd-1","location":"/production/HDA/REST/DEDL-HDA-EO.ESA.DAT.SENTINEL-1.L1_GRD.ipynb","dependencies":[],"frontmatter":{"title":"Using HDA to Find and Download Data for Urban Area Monitoring Using Sentinel-1 Data","subtitle":"In this notebook, we will present a simple example of how you can access data from DEDL using HDA and what you can do with it. We will demonstrate how to utilize thresholding techniques and compare the values of VV and VH polarizations to analyze urban areas. As an illustration, we will attempt to download Sentinel-1 images containing data of the urban area of Warsaw (Poland).","tags":["STAC","Authentication","Access Token"],"copyright":"© 2024 EUMETSAT","authors":[{"id":"Author: Eumetsat","name":"Author: Eumetsat"}],"license":{"content":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"thumbnail":"../../img/hda.png","kernelspec":{"name":"python_dedl","display_name":"Python DEDL","language":"python"},"numbering":{"title":{"offset":1}},"exports":[{"format":"ipynb","filename":"DEDL-HDA-EO.ESA.DAT.SENTINEL-1.L1_GRD.ipynb","url":"/DEDL-HDA-EO.ESA.DAT.-5155c0932cf563d2d861fa3d13de10aa.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"div","style":{"margin":"6px 0"},"children":[{"type":"link","style":{"textDecoration":"none"},"url":"https://jupyter.central.data.destination-earth.eu/user-redirect/lab/tree/DestinE-DataLake-Lab/HDA/REST/DEDL-HDA-EO.ESA.DAT.SENTINEL-1.L1_GRD.ipynb","children":[{"type":"span","class":"launch","children":[{"type":"text","value":"🚀 Launch in JupyterHub","key":"k4QYAzx1P3"}],"key":"EtfUGMmqsQ"}],"urlSource":"https://jupyter.central.data.destination-earth.eu/user-redirect/lab/tree/DestinE-DataLake-Lab/HDA/REST/DEDL-HDA-EO.ESA.DAT.SENTINEL-1.L1_GRD.ipynb","key":"TjkccAsYBm"}],"key":"X2wYVEuBct"}],"key":"WrVgTwKr3k"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"1. Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hsr6k3jWpk"}],"identifier":"id-1-prerequisites","label":"1. Prerequisites","html_id":"id-1-prerequisites","implicit":true,"key":"rcUeIVTtJp"}],"key":"DpOgqWKSQH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"1.1 DestinE account","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TQyM1OdYoz"}],"identifier":"id-1-1-destine-account","label":"1.1 DestinE account","html_id":"id-1-1-destine-account","implicit":true,"key":"DFaWoSYpeT"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Firstly, to work with HDA we will need account on DestinE Core Service Platfrom website. You can register under this url: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tjxNC9gzaV"},{"type":"link","url":"https://platform.destine.eu/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"https://​platform​.destine​.eu/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AQuffNg1lI"}],"urlSource":"https://platform.destine.eu/","key":"XY5igqvoif"}],"key":"NrjSL7Cos5"}],"key":"xv88piYz5I"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"1.2 Libraries","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KYgpXIWDnK"}],"identifier":"id-1-2-libraries","label":"1.2 Libraries","html_id":"id-1-2-libraries","implicit":true,"key":"r1G7fSdOYd"}],"key":"OvFVoa1e25"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import datetime\nimport requests\nimport numpy as np\nimport rasterio\nimport matplotlib.pyplot as plt\nimport requests\nimport zipfile\nfrom getpass import getpass\nimport io\nfrom rasterio.mask import mask\nimport os\nimport destinelab as deauth","key":"PcthUjKNjk"},{"type":"output","id":"AsfXilSklNLPMPnUNK6Qj","data":[],"key":"B14tkKKpJH"}],"key":"IbkdltS0lQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"1.3 Prerequisites data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"X1hB3ICfa0"}],"identifier":"id-1-3-prerequisites-data","label":"1.3 Prerequisites data","html_id":"id-1-3-prerequisites-data","implicit":true,"key":"NvQMJjaNsD"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Before reuqesting some data from DEDL, let’s specify what data we want to obtain. We will define 3 variables:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UYejSOlc49"}],"key":"faGa2jQcOH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Start date and end date,","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SGVYf24v17"}],"key":"xxUCXsdw6N"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Output directory,","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oHdx7JRkw4"}],"key":"gE13cSGQuS"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Geometry of interesting us area","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hYRBh9Xpzr"}],"key":"DneKXyCov5"}],"key":"WX7wr6HMMc"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"Start date and end date","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GZtYaeeFUC"},{"type":"text","value":" will define our timerange in reuqest. HDA will search only for products that were obtained between those two dates.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LgSXKdRblV"}],"key":"EqLiInp8gq"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"inlineCode","value":"Output directory","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"GVg98vsABz"},{"type":"text","value":" will define directory for downloaded products.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fjYGYtOeiN"}],"key":"dztqDUGahd"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"inlineCode","value":"Geometry","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"kXymcXu73Q"},{"type":"text","value":" wll define our area of interest. It will be passed as BBOX (Bounding Box), as a list of coordinates - Xmin, Ymin, Xmax, Ymax. All coordinates will be defined in EPSG:4326.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"OAZdwgGh75"}],"key":"OHMbbzOsDU"}],"key":"G4SvPYKmZX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Timerange of data that we want to recieve\nstart_date = '2023-07-01'\nend_date = '2023-07-07'\n# Output directory of our desired data\noutput_dir = 'sen_1/'\n# Geometry in form of a BBOX\nbbox = [20.8510, 52.0976, 21.2712, 52.3345,]","key":"AtRB0TjqRS"},{"type":"output","id":"blO6dBeuofDMdvF3V_Wu6","data":[],"key":"osKPxUtTkC"}],"key":"uqnMTJZkyg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2. Work with HDA","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K5amgW1qYC"}],"identifier":"id-2-work-with-hda","label":"2. Work with HDA","html_id":"id-2-work-with-hda","implicit":true,"key":"A0LIQs9s0h"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"HDA (Harmonized Data Access) uses STAC protocol, that allows its user access the Earth Observation data, stored in various provides. Thanks to that, HDA serves as an one stream of data, allowing for comfortable work with sattelite imagery.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RBhGK1rg6R"}],"key":"jVeDgM3shX"}],"key":"qGEZLdLmDI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2.1 API URLs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DLa93LB7hP"}],"identifier":"id-2-1-api-urls","label":"2.1 API URLs","html_id":"id-2-1-api-urls","implicit":true,"key":"MzLUwMfLEl"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"HDA, as all API, is build upon many endpoints. In this notebook we will use only one for collections and searching. Below there are definitions of those endpoints. We will be using the common one site, but you can change it to ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"FCqwYl7BSM"},{"type":"inlineCode","value":"central","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YQrw8nu1OQ"},{"type":"text","value":", ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YtOshNC2zO"},{"type":"inlineCode","value":"lumi","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Ui08Qzy4GW"},{"type":"text","value":" or ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"rLZcgMDvL8"},{"type":"inlineCode","value":"leonardo","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RNeRifBjTD"},{"type":"text","value":" if you want.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CqdJMQ6jCn"}],"key":"ZfrEePiXVg"}],"key":"ZKnyM55sUL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"COLLECTIONS_URL = 'https://hda.data.destination-earth.eu/stac/collections'\nSEARCH_URL = 'https://hda.data.destination-earth.eu/stac/search'","key":"OKhp3cQOIl"},{"type":"output","id":"XghGZh5ZJIdCWmCm2RR5l","data":[],"key":"BAwZsK36b6"}],"key":"mq8eUI0vsQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2.2 Listing available collections","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mYo0DkU3jj"}],"identifier":"id-2-2-listing-available-collections","label":"2.2 Listing available collections","html_id":"id-2-2-listing-available-collections","implicit":true,"key":"B9VEDSWO4t"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Firstly lets see to what collections we can get access, while using HDA.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JdNvbNzCco"}],"key":"cDHTg2dJgR"}],"key":"Gs70PPuCqf"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"def get_stac_collections(api_url):\n    response = requests.get(api_url)\n    if response.status_code == 200:\n        stac_data = response.json()['collections']\n        collections = [x['id'] for x in stac_data]\n        return collections\n    else:\n        print(f\"Error: {response.status_code} - {response.text}\")\n        return None\n    \nget_stac_collections(COLLECTIONS_URL)","key":"i4bwX2udnV"},{"type":"output","id":"ZnDgdKfgFDYLzHDDSpHlc","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/plain":{"content":"['EO.AERIS.DAT.IAGOS',\n 'EO.CLMS.DAT.CORINE',\n 'EO.CLMS.DAT.GLO.DMP300_V1',\n 'EO.CLMS.DAT.GLO.FAPAR300_V1',\n 'EO.CLMS.DAT.GLO.FCOVER300_V1',\n 'EO.CLMS.DAT.GLO.GDMP300_V1',\n 'EO.CLMS.DAT.GLO.LAI300_V1',\n 'EO.CLMS.DAT.GLO.NDVI300_V1',\n 'EO.CLMS.DAT.GLO.NDVI_1KM_V2',\n 'EO.CLMS.DAT.SENTINEL-2.HRVPP.VI',\n 'EO.DEM.DAT.COP-DEM_GLO-30-DGED',\n 'EO.DEM.DAT.COP-DEM_GLO-30-DTED',\n 'EO.DEM.DAT.COP-DEM_GLO-90-DGED',\n 'EO.DEM.DAT.COP-DEM_GLO-90-DTED',\n 'EO.ECMWF.DAT.CAMS_EUROPE_AIR_QUALITY_FORECASTS',\n 'EO.ECMWF.DAT.CAMS_EUROPE_AIR_QUALITY_REANALYSES',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_ATMOSHERIC_COMPO_FORECAST',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_EMISSION_INVENTORIES',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_FIRE_EMISSIONS_GFAS',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_GREENHOUSE_GAS_REANALYSIS',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_GREENHOUSE_GAS_REANALYSIS_MONTHLY_AV_FIELDS',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_RADIATIVE_FORCING',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_RADIATIVE_FORCING_AUX',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_REANALYSIS_EAC4',\n 'EO.ECMWF.DAT.CAMS_GLOBAL_REANALYSIS_EAC4_MONTHLY_AV_FIELDS',\n 'EO.ECMWF.DAT.CAMS_GREENHOUSE_GAS_FLUXES',\n 'EO.ECMWF.DAT.CAMS_SOLAR_RADIATION_TIMESERIES',\n 'EO.ECMWF.DAT.CEMS_FIRE_HISTORICAL',\n 'EO.ECMWF.DAT.CEMS_GLOFAS_FORECAST',\n 'EO.ECMWF.DAT.CEMS_GLOFAS_HISTORICAL',\n 'EO.ECMWF.DAT.CEMS_GLOFAS_REFORECAST',\n 'EO.ECMWF.DAT.CEMS_GLOFAS_SEASONAL',\n 'EO.ECMWF.DAT.CEMS_GLOFAS_SEASONAL_REFORECAST',\n 'EO.ECMWF.DAT.CO2_DATA_FROM_SATELLITE_SENSORS_2002_PRESENT',\n 'EO.ECMWF.DAT.DERIVED_GRIDDED_GLACIER_MASS_CHANGE',\n 'EO.ECMWF.DAT.DT_CLIMATE_ADAPTATION',\n 'EO.ECMWF.DAT.DT_EXTREMES',\n 'EO.ECMWF.DAT.EFAS_FORECAST',\n 'EO.ECMWF.DAT.EFAS_HISTORICAL',\n 'EO.ECMWF.DAT.EFAS_REFORECAST',\n 'EO.ECMWF.DAT.EFAS_SEASONAL',\n 'EO.ECMWF.DAT.EFAS_SEASONAL_REFORECAST',\n 'EO.ECMWF.DAT.ERA5_HOURLY_VARIABLES_ON_PRESSURE_LEVELS',\n 'EO.ECMWF.DAT.ERA5_LAND_HOURLY',\n 'EO.ECMWF.DAT.ERA5_LAND_MONTHLY',\n 'EO.ECMWF.DAT.ERA5_MONTHLY_MEANS_VARIABLES_ON_PRESSURE_LEVELS',\n 'EO.ECMWF.DAT.GLACIERS_DISTRIBUTION_DATA_FROM_RANDOLPH_GLACIER_INVENTORY_2000',\n 'EO.ECMWF.DAT.METHANE_DATA_SATELLITE_SENSORS_2002_PRESENT',\n 'EO.ECMWF.DAT.REANALYSIS_ERA5_SINGLE_LEVELS',\n 'EO.ECMWF.DAT.REANALYSIS_ERA5_SINGLE_LEVELS_MONTHLY_MEANS',\n 'EO.ECMWF.DAT.REANALYSIS_UERRA_EUROPE_SINGLE_LEVELS',\n 'EO.ECMWF.DAT.SATELLITE_SEA_ICE_CONCENTRATION',\n 'EO.ECMWF.DAT.SATELLITE_SEA_ICE_EDGE_TYPE',\n 'EO.ECMWF.DAT.SATELLITE_SEA_ICE_THICKNESS',\n 'EO.ECMWF.DAT.SEASONAL_FORECAST_ANOMALIES_ON_PRESSURE_LEVELS_2017_PRESENT',\n 'EO.ECMWF.DAT.SEASONAL_FORECAST_ANOMALIES_ON_SINGLE_LEVELS_2017_PRESENT',\n 'EO.ECMWF.DAT.SEASONAL_FORECAST_DAILY_DATA_ON_PRESSURE_LEVELS_2017_PRESENT',\n 'EO.ECMWF.DAT.SEASONAL_FORECAST_DAILY_DATA_ON_SINGLE_LEVELS_2017_PRESENT',\n 'EO.ECMWF.DAT.SEASONAL_FORECAST_MONTHLY_STATISTICS_ON_PRESSURE_LEVELS_2017_PRESENT',\n 'EO.ECMWF.DAT.SEASONAL_FORECAST_MONTHLY_STATISTICS_ON_SINGLE_LEVELS_2017_PRESENT',\n 'EO.ECMWF.DAT.SEA_LEVEL_DAILY_GRIDDED_DATA_FOR_GLOBAL_OCEAN_1993_PRESENT',\n 'EO.ECMWF.DAT.SIS_HYDROLOGY_METEOROLOGY_DERIVED_PROJECTIONS',\n 'EO.ESA.DAT.SENTINEL-1.L1_GRD',\n 'EO.ESA.DAT.SENTINEL-1.L1_SLC',\n 'EO.ESA.DAT.SENTINEL-2.MSI.L1C',\n 'EO.ESA.DAT.SENTINEL-2.MSI.L2A',\n 'EO.ESA.DAT.SENTINEL-3.OL_2_LFR___',\n 'EO.ESA.DAT.SENTINEL-3.OL_2_LRR___',\n 'EO.ESA.DAT.SENTINEL-3.SL_2_LST___',\n 'EO.ESA.DAT.SENTINEL-3.SR_2_LAN___',\n 'EO.ESA.DAT.SENTINEL-5P.TROPOMI.L1',\n 'EO.ESA.DAT.SENTINEL-5P.TROPOMI.L2',\n 'EO.EUM.CM.METOP.ASCSZFR02',\n 'EO.EUM.CM.METOP.ASCSZOR02',\n 'EO.EUM.CM.METOP.ASCSZRR02',\n 'EO.EUM.DAT.AMVR02',\n 'EO.EUM.DAT.GSAL2R02',\n 'EO.EUM.DAT.METOP.AMSUL1',\n 'EO.EUM.DAT.METOP.ASCSZF1B',\n 'EO.EUM.DAT.METOP.ASCSZO1B',\n 'EO.EUM.DAT.METOP.ASCSZR1B',\n 'EO.EUM.DAT.METOP.AVHRRGACR02',\n 'EO.EUM.DAT.METOP.AVHRRL1',\n 'EO.EUM.DAT.METOP.GLB-SST-NC',\n 'EO.EUM.DAT.METOP.GOMEL1',\n 'EO.EUM.DAT.METOP.GOMEL1R03',\n 'EO.EUM.DAT.METOP.IASIL1C-ALL',\n 'EO.EUM.DAT.METOP.IASSND02',\n 'EO.EUM.DAT.METOP.IASTHR011',\n 'EO.EUM.DAT.METOP.LSA-002',\n 'EO.EUM.DAT.METOP.MHSL1',\n 'EO.EUM.DAT.METOP.OSI-104',\n 'EO.EUM.DAT.METOP.OSI-150-A',\n 'EO.EUM.DAT.METOP.OSI-150-B',\n 'EO.EUM.DAT.METOP.SOMO12',\n 'EO.EUM.DAT.METOP.SOMO25',\n 'EO.EUM.DAT.MSG.CLM',\n 'EO.EUM.DAT.MSG.CLM-IODC',\n 'EO.EUM.DAT.MSG.HRSEVIRI',\n 'EO.EUM.DAT.MSG.HRSEVIRI-IODC',\n 'EO.EUM.DAT.MSG.LSA-FRM',\n 'EO.EUM.DAT.MSG.LSA-LST-CDR',\n 'EO.EUM.DAT.MSG.LSA-LSTDE',\n 'EO.EUM.DAT.MSG.MSG15-RSS',\n 'EO.EUM.DAT.MSG.RSS-CLM',\n 'EO.EUM.DAT.MULT.HIRSL1',\n 'EO.EUM.DAT.SENTINEL-3.AOD',\n 'EO.EUM.DAT.SENTINEL-3.FRP',\n 'EO.EUM.DAT.SENTINEL-3.OL_1_EFR___',\n 'EO.EUM.DAT.SENTINEL-3.OL_1_ERR___',\n 'EO.EUM.DAT.SENTINEL-3.OL_2_WFR___',\n 'EO.EUM.DAT.SENTINEL-3.OL_2_WRR___',\n 'EO.EUM.DAT.SENTINEL-3.SL_1_RBT___',\n 'EO.EUM.DAT.SENTINEL-3.SL_2_WST___',\n 'EO.EUM.DAT.SENTINEL-3.SR_1_SRA_A_',\n 'EO.EUM.DAT.SENTINEL-3.SR_1_SRA_BS',\n 'EO.EUM.DAT.SENTINEL-3.SR_1_SRA___',\n 'EO.EUM.DAT.SENTINEL-3.SR_2_WAT___',\n 'EO.GSW.DAT.CHANGE',\n 'EO.GSW.DAT.EXTENT',\n 'EO.GSW.DAT.OCCURRENCE',\n 'EO.GSW.DAT.RECURRENCE',\n 'EO.GSW.DAT.SEASONALITY',\n 'EO.GSW.DAT.TRANSITIONS',\n 'EO.MO.DAT.GLOBAL_ANALYSISFORECAST_BGC_001_028',\n 'EO.MO.DAT.GLOBAL_ANALYSISFORECAST_PHY_001_024',\n 'EO.MO.DAT.GLOBAL_ANALYSISFORECAST_WAV_001_027',\n 'EO.MO.DAT.GLOBAL_MULTIYEAR_BGC_001_033',\n 'EO.MO.DAT.GLOBAL_MULTIYEAR_PHY_ENS_001_031',\n 'EO.MO.DAT.GLOBAL_MULTIYEAR_WAV_001_032',\n 'EO.MO.DAT.INSITU_GLO_PHY_TS_OA_MY_013_052',\n 'EO.MO.DAT.INSITU_GLO_PHY_TS_OA_NRT_013_002',\n 'EO.MO.DAT.INSITU_GLO_PHY_UV_DISCRETE_NRT_013_048',\n 'EO.MO.DAT.MULTIOBS_GLO_BGC_NUTRIENTS_CARBON_PROFILES_MYNRT_015_009',\n 'EO.MO.DAT.MULTIOBS_GLO_BIO_BGC_3D_REP_015_010',\n 'EO.MO.DAT.MULTIOBS_GLO_BIO_CARBON_SURFACE_REP_015_008',\n 'EO.MO.DAT.MULTIOBS_GLO_PHY_MYNRT_015_003',\n 'EO.MO.DAT.MULTIOBS_GLO_PHY_S_SURFACE_MYNRT_015_013',\n 'EO.MO.DAT.MULTIOBS_GLO_PHY_TSUV_3D_MYNRT_015_012',\n 'EO.MO.DAT.MULTIOBS_GLO_PHY_W_3D_REP_015_007',\n 'EO.MO.DAT.OCEANCOLOUR_GLO_BGC_L3_MY_009_103',\n 'EO.MO.DAT.OCEANCOLOUR_GLO_BGC_L3_MY_009_107',\n 'EO.MO.DAT.OCEANCOLOUR_GLO_BGC_L3_NRT_009_101',\n 'EO.MO.DAT.OCEANCOLOUR_GLO_BGC_L4_MY_009_104',\n 'EO.MO.DAT.OCEANCOLOUR_GLO_BGC_L4_MY_009_108',\n 'EO.MO.DAT.OCEANCOLOUR_GLO_BGC_L4_NRT_009_102',\n 'EO.MO.DAT.SEAICE_GLO_SEAICE_L4_NRT_OBSERVATIONS_011_001',\n 'EO.MO.DAT.SEAICE_GLO_SEAICE_L4_NRT_OBSERVATIONS_011_006',\n 'EO.MO.DAT.SEAICE_GLO_SEAICE_L4_REP_OBSERVATIONS_011_009',\n 'EO.MO.DAT.SEALEVEL_GLO_PHY_L4_NRT_008_046',\n 'EO.MO.DAT.SEALEVEL_GLO_PHY_MDT_008_063',\n 'EO.MO.DAT.SST_GLO_SST_L3S_NRT_OBSERVATIONS_010_010',\n 'EO.MO.DAT.SST_GLO_SST_L4_NRT_OBSERVATIONS_010_001',\n 'EO.MO.DAT.SST_GLO_SST_L4_REP_OBSERVATIONS_010_011',\n 'EO.MO.DAT.SST_GLO_SST_L4_REP_OBSERVATIONS_010_024',\n 'EO.MO.DAT.WAVE_GLO_PHY_SWH_L3_NRT_014_001',\n 'EO.MO.DAT.WAVE_GLO_PHY_SWH_L4_NRT_014_003',\n 'EO.MO.DAT.WAVE_GLO_WAV_L3_SPC_NRT_OBSERVATIONS_014_002',\n 'EO.MO.DAT.WIND_GLO_PHY_CLIMATE_L4_MY_012_003',\n 'EO.MO.DAT.WIND_GLO_PHY_L3_MY_012_005',\n 'EO.MO.DAT.WIND_GLO_PHY_L3_NRT_012_002',\n 'EO.MO.DAT.WIND_GLO_PHY_L4_MY_012_006',\n 'EO.MO.DAT.WIND_GLO_PHY_L4_NRT_012_004',\n 'EO.NASA.DAT.LANDSAT.C2_L1',\n 'EO.NASA.DAT.LANDSAT.C2_L2',\n 'STAT.EUSTAT.DAT.GREENHOUSE_GAS_EMISSION_AGRICULTURE',\n 'STAT.EUSTAT.DAT.POP_AGE_GROUP_SEX_NUTS3',\n 'STAT.EUSTAT.DAT.POP_AGE_SEX_NUTS2',\n 'STAT.EUSTAT.DAT.POP_CHANGE_DEMO_BALANCE_CRUDE_RATES_NUTS3',\n 'STAT.EUSTAT.DAT.SHARE_ENERGY_FROM_RENEWABLE']","content_type":"text/plain"}}}],"key":"zsxIU0gFAS"}],"key":"g3PXJEwFlw"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As you can see, there are many dataset, that can be access using just one single tool - HDA. In this notebook we will use only Sentinel-1 (GRDH) images, so our collection will be ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Qc6CUcmRbT"},{"type":"inlineCode","value":"EO.ESA.DAT.SENTINEL-1.L1_GRD","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"REdRa1G4VY"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SyKhcfEbnS"}],"key":"CHvwFiLLe5"}],"key":"gFXYtpyZRN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"collections = ['EO.ESA.DAT.SENTINEL-1.L1_GRD']","key":"AoWG5mpJVw"},{"type":"output","id":"xKIRtO2GZu_YjXjU639CS","data":[],"key":"k4Y2nDxtdk"}],"key":"IkZoZErD9J"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2.3 Authorization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LMPzY5oIQm"}],"identifier":"id-2-3-authorization","label":"2.3 Authorization","html_id":"id-2-3-authorization","implicit":true,"key":"LoRrSZgU9J"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As stated before, to use HDA you will need an account on DestinE. Using your credentials, you will be able to generate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BBrD07IGg6"},{"type":"inlineCode","value":"access token","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cFiqQhe8aF"},{"type":"text","value":", that will be needed in upcoming requests. In listing collections’ cell you didn’t have to create token, because only more advanced requests (like listing, searching and downloading items) need it.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"slYgpPF7BK"}],"key":"c2pBdJHJk5"}],"key":"udMV8I8kdE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"DESP_USERNAME = input(\"Please input your DESP username or email: \")\nDESP_PASSWORD = getpass(\"Please input your DESP password: \")\n\nauth = deauth.AuthHandler(DESP_USERNAME, DESP_PASSWORD)\naccess_token = auth.get_token()\nif access_token is not None:\n    print(\"DEDL/DESP Access Token Obtained Successfully\")\nelse:\n    print(\"Failed to Obtain DEDL/DESP Access Token\")\n\nauth_headers = {\"Authorization\": f\"Bearer {access_token}\"}","key":"B1eng1tTxC"},{"type":"output","id":"fH1nac5PxqXEKy_NAzjTU","data":[],"key":"thd7SUqr1L"}],"key":"H7xh6idwLW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2.4 Find newest product","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qWjDkVKTpO"}],"identifier":"id-2-4-find-newest-product","label":"2.4 Find newest product","html_id":"id-2-4-find-newest-product","implicit":true,"key":"SKgw1AmmDu"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"After defining all prerequired data and obtaining access token, we can start searching for interesting us products. To do that, we will firstly create body of a POST request with ours parameters. Then, we will send it to HDA and, if request is successful, we will read from response download link.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"e63n4xd3KY"}],"key":"CP1gdDOgQM"}],"key":"qMz3pKp19a"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def search_items(access_token: str, search_url: str, collection: str, \n                 bbox: list[float | int], start_date: str, end_date: str):\n    body = {\n        'datetime': f'{start_date}T00:00:00Z/{end_date}T23:59:59Z',\n        'collections': [collection],\n        'bbox': bbox\n    }\n    response = requests.post(search_url, json=body, headers={'Authorization': 'Bearer {}'.format(access_token)})\n    if response.status_code != 200:\n        print(f'Error in search request: {response.status_code} - {response.text}')\n        return None\n    else:\n        print(\"Request successful! Reading data...\")\n        products_list = [(feature.get('assets').get('downloadLink').get('href'), feature.get('links')[0].get('title')) for feature in response.json().get('features', [])]\n        return products_list","key":"O6QIGBuj5A"},{"type":"output","id":"gqhKZfaWEIpyk2vUbkdLM","data":[],"key":"Nd0Uqdix7T"}],"key":"UHG2FBHI0F"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"collections_items = []\nfor c in collections:\n    collections_items.append(search_items(access_token, SEARCH_URL, c, bbox, start_date, end_date))","key":"yunw9Zow4T"},{"type":"output","id":"Ypyes_j2yiNspTi8DFfMb","data":[],"key":"xHRLEMUurn"}],"key":"KRuqC0MEVx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2.5 Download founded images","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OAccolsbpc"}],"identifier":"id-2-5-download-founded-images","label":"2.5 Download founded images","html_id":"id-2-5-download-founded-images","implicit":true,"key":"gic1KM56RG"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"After obtaining URLs for each interesting us product, we can download it with one request. Product will be downloaded compressed in zip format.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"evI2IAxdmu"}],"key":"MHplolpKIK"}],"key":"z9kT9rl3L7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def hda_download(access_token: str, url: str, output: str):\n    response = requests.get(url,stream=True,headers={'Authorization': 'Bearer {}'.format(access_token), 'Accept-Encoding': None})\n    if response.status_code == 200:\n        print('Downloading dataset...')\n        with zipfile.ZipFile(io.BytesIO(response.content)) as z:\n            z.extractall(output)\n        print('The dataset has been downloaded to: {}'.format(output))\n    else:\n        print('Request Unsuccessful! Error-Code: {}'.format(response.status_code))","key":"fSsrE3ZBr0"},{"type":"output","id":"P-7XkmjoYwxenBL6T5Tt8","data":[],"key":"j7D2vc7X5c"}],"key":"nOuXtPvM1V"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"for collection in collections_items:\n    for item in collection:\n        url = item[0]\n        product_id = item[1]\n        download_path = output_dir + product_id\n        hda_download(access_token, url, download_path)\n        break","key":"TDt42NTxP4"},{"type":"output","id":"BQbPsgLw_xFgmZM1SM1CL","data":[],"key":"Gvca060Qug"}],"key":"BktgRzgOIh"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"4. Urban areas extraction by tresholding","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vWsFwOXn45"}],"identifier":"id-4-urban-areas-extraction-by-tresholding","label":"4. Urban areas extraction by tresholding","html_id":"id-4-urban-areas-extraction-by-tresholding","implicit":true,"key":"lrmLqNp8l0"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The analysis of Synthetic Aperture Radar (SAR) images enables the detection of variations in radar wave reflections, which is crucial for identifying urbanized areas. SAR images exhibit distinct reflection patterns that allow for the delineation of urban areas, including agglomerations and smaller urban settlements. Urbanized areas stand out in these images primarily due to the intense reflection of radar waves by man-made structures, roads, and other artificial elements of infrastructure, facilitating their clear identification contrasted with natural terrain. Such analysis of areas like the Warsaw agglomeration can serve for monitoring city growth and development, urban planning, assessment of natural and anthropogenic threats, and environmental management. The image clearly depicts the Warsaw agglomeration area, adjacent to the region between the Warsaw and Łódź agglomerations. This space is currently planned for development to connect both agglomerations. In the central part of the frame, there are plans for establishing a large airport complex.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"e3O1x5J53I"}],"key":"ULEGfME77G"}],"key":"Ma7L5l8UEg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"4.1 Reading and preprocessing data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IDIwMjgTjU"}],"identifier":"id-4-1-reading-and-preprocessing-data","label":"4.1 Reading and preprocessing data","html_id":"id-4-1-reading-and-preprocessing-data","implicit":true,"key":"OMVar1boUJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The first step in our analysis will be data reading. The data will be read using the rasterio library from the output folder path provided in the previous section.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VkuXxLixZj"}],"key":"nIGYZPFZVF"}],"key":"CxojeaMtSJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Function to find files containing specific substrings (\"vv\" and \"vh\") in their names\ndef find_files_with_names(folder_path, *names):\n    vv_path = None  \n    vh_path = None  \n    \n    # Traverse the directory tree starting at folder_path\n    for root, dirs, files in os.walk(folder_path):\n        if dirs:  # Check if there are subdirectories\n            first_subfolder = dirs[0]\n            measurement_folder = os.path.join(root, first_subfolder, \"measurement\")\n            \n            if os.path.isdir(measurement_folder):\n                # Look through the files in the \"measurement\" folder\n                for file_name in os.listdir(measurement_folder):\n                    if \"vv\" in file_name:\n                        vv_path = os.path.join(measurement_folder, file_name)\n                    elif \"vh\" in file_name:\n                        vh_path = os.path.join(measurement_folder, file_name)\n                break  # Exit after finding the files\n    return vv_path, vh_path\n\n# Find the \"vv\" and \"vh\" files in the specified directory\ninput_file_vv, input_file_vh = find_files_with_names(output_dir, \"vv\", \"vh\")\n\n# Open the \"vv\" file and read its data and profile\nwith rasterio.open(input_file_vv) as src_vv:\n    vv_band = src_vv.read(1)\n    profile_vv = src_vv.profile\n\n# Open the \"vh\" file and read its data and profile\nwith rasterio.open(input_file_vh) as src_vh:\n    vh_band = src_vh.read(1)\n    profile_vh = src_vh.profile\n","key":"ZJEHEvnFZM"},{"type":"output","id":"zR0qk6Upl-I9QdXVBh6MW","data":[],"key":"n0GfwzObaV"}],"key":"pLQid61v2U"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"4.2 Pixel value covertion to decibels","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nIiZtqevWH"}],"identifier":"id-4-2-pixel-value-covertion-to-decibels","label":"4.2 Pixel value covertion to decibels","html_id":"id-4-2-pixel-value-covertion-to-decibels","implicit":true,"key":"fOX0Q6F6RN"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"After reading the data, we can convert the pixel values to decibels. Data from Sentinel-1 is converted to the decibel scale (dB) to better visualize differences in the intensity of radar wave reflection, which aids in the analysis of urban areas due to their specific reflection characteristics.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"PANnArLkcY"}],"key":"ntqgKIoVK9"}],"key":"v1UEjlDunM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def convert_to_db(image):\n    # Replace zeros with a small positive value to avoid taking log of zero\n    image[image == 0] = np.finfo(float).eps  \n\n    # Calculate dB values\n    image_db = 10 * np.log10(image)\n\n    # Replace infinite values with the maximum finite value\n    max_value = np.nanmax(image_db[np.isfinite(image_db)])  \n    image_db[np.isinf(image_db)] = max_value  \n\n    return image_db\n\nvv_band_db = convert_to_db(vv_band)\nvh_band_db = convert_to_db(vh_band)","key":"mjh2RicHMm"},{"type":"output","id":"o5gvilaHtC-I3c2oMebi0","data":[{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_2710/220689011.py:6: RuntimeWarning: divide by zero encountered in log10\n  image_db = 10 * np.log10(image)\n"}],"key":"xoQTBdKtF7"}],"key":"G7ng3P977s"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"4.3 Data analysis and tresholding","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IJAR1oh5lx"}],"identifier":"id-4-3-data-analysis-and-tresholding","label":"4.3 Data analysis and tresholding","html_id":"id-4-3-data-analysis-and-tresholding","implicit":true,"key":"Vk1C2vqUeo"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The next step involves plotting histograms of the decibel pixel values for both the VV and VH bands. These histograms provide insights into the distribution of radar reflection intensities, aiding in understanding the characteristics of the observed area. The chosen thresholds, 23.5 dB for VV and 21.5 dB for VH, are selected based on prior knowledge or analysis requirements specific to urban areas to segment regions of interest in the images. The thresholding method applied here converts pixel values above the threshold to 1 and those below to 0, aiding in the delineation of features or areas with specific radar reflection characteristics typical of urban environments.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZectKsYH7X"}],"key":"mbXWW6aa8P"}],"key":"nhTs2RQLIS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(1, 2, figsize=(18, 5))\n\n# Histogram of VV Image in dB\naxs[0].hist(vv_band_db.flatten(), bins=50, color='blue', alpha=0.7, label='VV dB')\naxs[0].set_title('Histogram of VV Image in dB')\naxs[0].set_xlabel('Radar Reflection Value (dB)')\naxs[0].set_ylabel('Number of Pixels')\naxs[0].legend()\naxs[0].grid(True, linestyle='--', alpha=0.5)\n\n# Histogram of VH Image in dB\naxs[1].hist(vh_band_db.flatten(), bins=50, color='red', alpha=0.7, label='VH dB')\naxs[1].set_title('Histogram of VH Image in dB')\naxs[1].set_xlabel('Radar Reflection Value (dB)')\naxs[1].set_ylabel('Number of Pixels')\naxs[1].legend()\naxs[1].grid(True, linestyle='--', alpha=0.5)\n\nplt.show()\n\n# Function to apply a threshold to an image\n# Pixels greater than the threshold are set to 1, others to 0\ndef thresholding(image, threshold):\n    return (image > threshold).astype(np.uint8)\n\n# Define threshold values for VV and VH bands\nthreshold_value_vv = 23.5\nthreshold_value_vh = 21.5\n\n# Apply thresholding to the VV and VH band\nvv_band_threshold = thresholding(vv_band_db, threshold_value_vv)\nvh_band_threshold = thresholding(vh_band_db, threshold_value_vh)\n\n# Combine the thresholded images using a logical AND operation\n# The result is 1 where both VV and VH are above their respective thresholds\ncombined_threshold = np.logical_and(vv_band_threshold, vh_band_threshold).astype(np.uint8)\n","key":"s9c5SiGTRS"},{"type":"output","id":"0n76pOD0cxPwQjnf4nwVF","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"85500d4646bcf9aecb951eeec20022fb","path":"/85500d4646bcf9aecb951eeec20022fb.png"},"text/plain":{"content":"<Figure size 1800x500 with 2 Axes>","content_type":"text/plain"}}}],"key":"M7pPEBDtbK"}],"key":"lqac1DTfL3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"4.4 Images ploting","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nume7561um"}],"identifier":"id-4-4-images-ploting","label":"4.4 Images ploting","html_id":"id-4-4-images-ploting","implicit":true,"key":"s3ykGoZVoV"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Next on the subplots we can visualize the differences in radio signal reflection for various polarization types. By displaying the original and decibel-transformed images for both VV and VH polarizations, we can observe distinct features and intensities in urban areas. Furthermore, by combining information from both polarizations through thresholding, we enhance our ability to mask urbanized regions, providing a more comprehensive understanding of the observed area’s urban characteristics.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"et585XDWf3"}],"key":"VLe3PFjkXX"}],"key":"wB6s4x2u68"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create a figure with a 3x2 grid of subplots, setting the overall figure size\nfig, ax = plt.subplots(3, 2, figsize=(18, 18)) \n\n# Display the original VV image\nax[0, 1].imshow(vv_band, cmap='viridis')\nax[0, 1].set_title('Original VV Image')\n\n# Display the VV image in decibels\nax[1, 1].imshow(vv_band_db, cmap='viridis')\nax[1, 1].set_title('VV Image in dB')\n\n# Display the VV image after thresholding\nax[2, 1].imshow(vv_band_threshold, cmap='inferno')\nax[2, 1].set_title('VV Image after Thresholding')\n\n# Display the original VH image\nax[0, 0].imshow(vh_band, cmap='viridis')\nax[0, 0].set_title('Original VH Image')\n\n# Display the VH image in decibels\nax[1, 0].imshow(vh_band_db, cmap='viridis')\nax[1, 0].set_title('VH Image in dB')\n\n# Display the VH image after thresholding\nax[2, 0].imshow(vh_band_threshold, cmap='inferno')\nax[2, 0].set_title('VH Image after Thresholding')\n\n# Turn off the axes for all subplots to improve the visual presentation\nfor i in range(2):\n    for j in range(3):\n        ax[j, i].axis('off')\n\n# Show the complete figure\nplt.show()","key":"LGMdAdB0pR"},{"type":"output","id":"M__79xY673HLwl7TcOkIl","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"866ead2546d3c1b302807899906b79fa","path":"/866ead2546d3c1b302807899906b79fa.png"},"text/plain":{"content":"<Figure size 1800x1800 with 6 Axes>","content_type":"text/plain"}}}],"key":"Kse1QhLwSZ"}],"key":"tw7zUZjRFD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Display the combined threshold image using a specific colormap\nplt.figure(figsize=(18, 9))  \nplt.imshow(combined_threshold, cmap='twilight_shifted')\nplt.title('Combined Threshold Image')  \nplt.axis('off')  \nplt.show()","key":"uI8JddDnFD"},{"type":"output","id":"Tv3mJpaTEFqQ9vdzSn86o","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"64b2f2576e69caf4a3b471fdd87b1c7c","path":"/64b2f2576e69caf4a3b471fdd87b1c7c.png"},"text/plain":{"content":"<Figure size 1800x900 with 1 Axes>","content_type":"text/plain"}}}],"key":"xIq1KJOeF9"}],"key":"iqfShymlDV"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This method of data analysis facilitates straightforward masking of urbanized areas. In the processed image, the Warsaw agglomeration is clearly visible on the right side. A star-shaped accumulation of population is apparent in Warsaw along major transportation corridors such as railways and expressways. Smaller urban centers are visible in the image. Furthermore, it can be observed that the number of masked pixels accumulates as we approach the city center, indicating denser urban development in the downtown area compared to the suburbs.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P32EHDW435"}],"key":"daBEmT15dj"}],"key":"oRGTCjzcR6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"4.5 Cuantitive analysis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OOCQVlo1hS"}],"identifier":"id-4-5-cuantitive-analysis","label":"4.5 Cuantitive analysis","html_id":"id-4-5-cuantitive-analysis","implicit":true,"key":"wRS6yxlhbz"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"After processing our satellite images, we can conduct quantitative analysis. The characteristics of the satellite data enable us to analyze individual pixel values, which is crucial for detailed and statistical studies. In our case, having the data thresholded and the size of each pixel being 10x10 meters, we can calculate the percentage and the adequate size of the urbanized area.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"gVn2vLKqAW"}],"key":"uUQ8luWgQW"}],"key":"UM2DFG744A"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Calculate the number of urban pixels by summing up the binary values in the combined threshold image\nurban_pixels = np.sum(combined_threshold)\n\n# Define the area covered by a single pixel (in square meters)\npixel_area = 10 * 10  # Assuming each pixel represents a 10m x 10m area\n\n# Calculate the total urban area in square meters\nurban_area = urban_pixels * pixel_area\n\n# Calculate the total number of pixels in the combined threshold image\ntotal_pixels = combined_threshold.size\n\n# Calculate the percentage of urbanized area in the image\nurban_percentage = (urban_pixels / total_pixels) * 100\n\n# Convert urban area from square meters to hectares\nurban_area_hectares = urban_area / 10_000  \n\n# Convert total area from square meters to hectares\ntotal_area_hectares = (total_pixels * pixel_area) / 10_000\n\nprint(f\"Percentage of Urbanized Area: {urban_percentage:.2f}%\")\nprint(f\"Urbanized Area: {urban_area_hectares:.2f} ha\")\nprint(f\"Total Image Area: {total_area_hectares:.2f} ha\")","key":"WDQNNok3Bt"},{"type":"output","id":"3daKUUsfXEbS-tdTH_KkS","data":[{"name":"stdout","output_type":"stream","text":"Percentage of Urbanized Area: 12.60%\nUrbanized Area: 557958.76 ha\nTotal Image Area: 4427348.42 ha\n"}],"key":"EOXmi7CiSo"}],"key":"mzq0fBMmUU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"4.6 Results download","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tQv6gSGICw"}],"identifier":"id-4-6-results-download","label":"4.6 Results download","html_id":"id-4-6-results-download","implicit":true,"key":"PhF0BH4MOJ"}],"key":"Ys0gvjxwOC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define output file names\noutput_file_db_vv = 'vv_db_urban_warsaw.tif'\noutput_file_db_vh = 'vh_db_urban_warsaw.tif'\noutput_file_threshold_combined = 'warsaw_urban_threshold_combined.tif'\n\n# Update the data type in the profile to float32 for dB conversion\nprofile_vv.update(dtype=rasterio.float32)\nprofile_vh.update(dtype=rasterio.float32)\n\n# Write the result data in dB to the output file\nwith rasterio.open(output_file_db_vv, 'w', **profile_vv) as dst:\n    dst.write(vv_band_db.astype(np.float32), 1)\n    \nwith rasterio.open(output_file_db_vh, 'w', **profile_vh) as dst:\n    dst.write(vh_band_db.astype(np.float32), 1)\n\n# Update the data type in the VV profile to uint8 for the combined thresholded image\nprofile_vv.update(dtype=rasterio.uint8)\n\n# Write the combined thresholded image data to the output file\nwith rasterio.open(output_file_threshold_combined, 'w', **profile_vv) as dst:\n    dst.write(combined_threshold, 1)","key":"iPTn2T0wLi"},{"type":"output","id":"rL34tyE9QDxHARpfYIOcY","data":[{"name":"stderr","output_type":"stream","text":"/home/patryk/miniconda3/envs/hda/lib/python3.11/site-packages/rasterio/__init__.py:314: NotGeoreferencedWarning: The given matrix is equal to Affine.identity or its flipped counterpart. GDAL may ignore this matrix and save no geotransform without raising an error. This behavior is somewhat driver-specific.\n  dataset = writer(\n"}],"key":"zBPNeG5wvv"}],"key":"GxKsnxa73a"}],"key":"uHhE4hS8kh"},"references":{"cite":{"order":[],"data":{}}}}